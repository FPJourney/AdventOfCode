/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package day1

import java.nio.file.Files
import kotlin.io.path.Path
import kotlin.math.abs

class App {
    val greeting: String
        get() {
            return "Hello AdventOfCode 2024!"
        }
}

fun main() {
    println(App().greeting)
    val columns = Files.lines(Path("Input.txt"))
        .toList()
        .flatMap { str -> str.split("   ").zipWithNext() }
        .let { numPairs ->
            Pair(
                numPairs.map { it.first }.map { it.toInt() }.sorted(),
                numPairs.map { it.second }.map { it.toInt() }.sorted()
            )
        }
    println(calculateDistancesBetween(columns.first, columns.second).sum())
    //part 2
    val appearances = countAppearances(columns.first, columns.second)
    println(calculateSimilarityScore(columns.first, appearances))
}

fun calculateDistancesBetween(leftColumn: List<Int>, rightColumn: List<Int>): List<Int> =
    leftColumn.zip(rightColumn) { a, b -> abs(b - a) }

fun countAppearances(leftColumn: List<Int>, rightColumn: List<Int>): List<Int> =
    leftColumn.map { n1 -> rightColumn.count { n2 -> n2 == n1 } }

fun calculateSimilarityScore(leftColumn: List<Int>, appearances: List<Int>): Int =
    leftColumn.zip(appearances) { a, b -> a * b }.sum()